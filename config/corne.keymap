/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * 
 * My take on 'real programmers Dvorak' layout with custom symbol layers.
 * References:
 *     Programmers dv: Programmer Dvorak layout (by Roland Kaufmann)
 *     Real programmers dv: https://github.com/ThePrimeagen
 *     My qmk config: https://github.com/timonviola/qmk_firmware/tree/master/keyboards/crkbd/keymaps/timon
 * 
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define MEDIA 3

// This is ok if only a single sticky key is used.
// Create new behavior if multiple &sk is used.

&sk { quick-release; };

/ {
    behaviors {
        td_caps: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "base";

            // +------------------------------------------------------------------------------------+
            // |  TAB  | ; : | , < | . > |  P  |  Y  |         |  F  |  G  |  C  |  R  |  L  | BSPC |
            // | LSHFT |  A  |  O  |  E  |  U  |  I  |         |  D  |  H  |  T  |  N  |  S  | DEL  |
            // |  CTLR | ' " | q @ |  J  |  K  |  X  |         |  B  |  M  |  W  |  V  |  Z  | ESC  |
            //                       | GUI | LOWER | SPC |  | ENT | RAISE | ALT |
            // +------------------------------------------------------------------------------------+

            bindings = <
&kp ESC    &kp Q      &kp W  &kp E  &kp R     &kp T      &kp Y      &kp U         &kp I  &kp O    &kp P      &kp BSPC
&kp TAB    &kp A      &kp S  &kp D  &kp F     &kp G      &kp H      &kp J         &kp K  &kp L    &kp SEMI   &kp DEL
&kp LSHFT  &kp LCTRL  &kp Z  &kp X  &kp C     &kp V      &kp B      &kp N         &kp M  &kp DOT  &kp COMMA  &kp ESC
                             &mo 1  &kp LGUI  &kp RET    &kp SPACE  &kp LEFT_ALT  &mo 2
            >;
        };

        lower_layer {
            label = "lower";

            // +------------------------------------------------------------------------------------+
            // |   TAB |  1  |  2  |  3  |  4  |  5  |         |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | LSHFT | F1  | F2  | F3  | F4  | F5  |         | LEFT| DOWN|  UP | RHGT|     |      |
            // |  CTLR | F6  | F7  | F8  | F9  |     |         |     | F10 | F11 | F12 |     |      |
            //                         | GUI |     | SPC |  | ENT |MEDIA| ALT |
            // +------------------------------------------------------------------------------------+

            bindings = <
&kp ESC    &kp N1     &kp N2  &kp N3  &kp N4    &kp N5     &kp N6     &kp N7    &kp N8   &kp N9     &kp N0  &kp BSPC
&kp TAB    &kp F1     &kp F2  &kp F3  &kp F4    &kp F5     &kp LEFT   &kp DOWN  &kp UP   &kp RIGHT  &trans  &trans
&kp LSHFT  &kp LCTRL  &kp F6  &kp F7  &kp F8    &kp F9     &trans     &kp F10   &kp F11  &kp F12    &trans  &trans
                              &trans  &kp LGUI  &kp RET    &kp SPACE  &kp LALT  &mo 3
            >;
        };

        raise_layer {
            label = "raise";

            // +------------------------------------------------------------------------------------+
            // |  TAB  |  !  |  @  |  #  |  $  |  %  |         |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | LSHFT |  ~  |  -  |  [  |  (  |  :  |         |  \  |  )  |  ]  |  +  |  =  | ` ~  |
            // |  CTLR |GLOBE|  _  |  ?  |  {  |  "  |         |  ;  |  }  |     |  |  |  /  |  ESC |
            //                        | GUI |MEDIA| SPC |   | ENT |     | ALT |
            // +------------------------------------------------------------------------------------+

            bindings = <
&kp ESC   &kp EXCL   &kp AT     &kp HASH   &kp DLLR          &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR   &kp BSPC
&kp TAB   &kp TILDE  &kp MINUS  &kp LBKT   &kp LPAR          &kp COLON    &kp BSLH   &kp RPAR  &kp RBKT  &kp PLUS  &kp EQUAL  &kp GRAVE
&kp CAPS  &kp LCTRL  &kp UNDER  &kp QMARK  &kp LBRC          &kp DQT      &kp SEMI   &kp RBRC  &trans    &kp PIPE  &kp FSLH   &kp ESC
                                &mo 3      &kp LEFT_COMMAND  &kp RET      &kp SPACE  &kp LALT  &trans
            >;
        };

        media_layer {
            label = "media";

            // +------------------------------------------------------------------------------------+
            // |   TAB |     |     |     |     |     |         |     |     |     |     |     | BSPC |
            // |BT CLR | BT1 | BT2 | BT3 | BT4 | BT5 |         | PREV|> || | NEXT|     |     |      |
            // |  CTLR |PW ON|PWOFF|     |     |     |         | MUTE| VOL-| VOL+|     |     |  ESC |
            //                        | GUI |     | SPC |  | ENT |     | ALT |
            // +------------------------------------------------------------------------------------+

            bindings = <
&trans      &trans            &trans             &trans        &trans        &trans          &trans      &trans        &trans        &trans  &trans  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PREV  &kp C_PP      &kp C_NEXT    &trans  &trans  &trans
&trans      &ext_power EP_ON  &ext_power EP_OFF  &trans        &trans        &trans          &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans  &trans  &kp ESC
                                                 &trans        &trans        &kp RET         &kp SPACE   &trans        &trans
            >;
        };
    };
};

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };
